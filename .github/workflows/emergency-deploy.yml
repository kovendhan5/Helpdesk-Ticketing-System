name: Emergency Deploy (Simple Frontend)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Emergency Deploy with Simple Frontend
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 900s
          script: |
            # Navigate to app directory
            cd /home/kovendhan2535
            rm -rf helpdesk-app
            mkdir -p helpdesk-app
            cd helpdesk-app

            # Clone repository
            git clone https://github.com/kovendhan5/Helpdesk-Ticketing-System.git .

            # Create production environment file with secrets
            cat > .env << EOF
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            FRONTEND_PORT=${{ secrets.FRONTEND_PORT || '80' }}
            API_URL=http://${{ secrets.VM_HOST }}:3001
            EOF

            # Stop existing containers
            docker-compose down 2>/dev/null || true
            docker-compose -f docker-compose.simple.yml down 2>/dev/null || true

            # Remove containers
            docker rm -f helpdesk-postgres helpdesk-backend helpdesk-frontend 2>/dev/null || true

            # Remove images for clean build
            docker images | grep -E "(helpdesk|<none>)" | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null || true

            # Deploy with simple frontend
            echo "Deploying with simple HTML frontend..."
            docker-compose -f docker-compose.simple.yml up -d --build

            # Show status
            sleep 20
            echo "=== Container Status ==="
            docker ps
            echo "=== Service Logs ==="
            docker-compose -f docker-compose.simple.yml logs --tail=20

            # Test endpoints
            echo "=== Testing Endpoints ==="
            sleep 5
            curl -f http://localhost/health 2>/dev/null && echo "Frontend: OK" || echo "Frontend: FAILED"
            curl -f http://localhost:3001/health 2>/dev/null && echo "Backend: OK" || echo "Backend: FAILED"
