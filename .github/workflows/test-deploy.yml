name: 🧪 Simple Test Deployment

on:
  workflow_dispatch:

jobs:
  test-deploy:
    name: 🧪 Simple Test Deploy
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 🔑 Add VM to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: 🧪 Test Basic SSH Commands
        run: |
          echo "🧪 Testing basic SSH commands..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            echo 'SSH connection working!'
            whoami
            pwd
            echo 'Home directory contents:'
            ls -la ~/ | head -5
          "

      - name: 🧹 Safe Cleanup Test
        run: |
          echo "🧹 Testing safe cleanup..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            cd ~
            echo 'Current directory:'
            pwd
            echo 'Testing rm command...'
            rm -rf test-cleanup-dir 2>/dev/null || echo 'Nothing to remove'
            mkdir test-cleanup-dir
            echo 'test' > test-cleanup-dir/test.txt
            ls -la test-cleanup-dir/
            rm -rf test-cleanup-dir
            echo '✅ Cleanup test successful'
          "

      - name: 🐳 Docker Permission Test
        run: |
          echo "🐳 Testing Docker permissions..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            echo 'Docker version:'
            docker --version
            echo 'Testing docker ps:'
            docker ps || echo 'Docker permission issue detected'
            echo 'User groups:'
            groups \$(whoami)
            echo 'Docker group check:'
            groups \$(whoami) | grep -q docker && echo '✅ User in docker group' || echo '⚠️ User NOT in docker group'
          "

      - name: 📁 Directory Test
        run: |
          echo "📁 Testing directory operations..."
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            cd ~
            echo 'Creating test directories...'
            mkdir -p test-helpdesk/backend test-helpdesk/frontend
            echo 'test backend' > test-helpdesk/backend/test.txt
            echo 'test frontend' > test-helpdesk/frontend/test.txt
            echo 'Directory structure:'
            ls -la test-helpdesk/
            echo 'Cleanup:'
            rm -rf test-helpdesk
            echo '✅ Directory operations successful'
          "

      - name: 📊 Test Summary
        run: |
          echo "📊 Simple Test Deployment Summary"
          echo "================================="
          echo "✅ All basic operations tested successfully!"
          echo "🎯 Target VM: ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}"
          echo ""
          echo "🔍 If all tests passed, the robust deployment should work."
          echo "🚀 You can now run the 'Robust Deployment' workflow."
