version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: helpdesk-postgres
    environment:
      POSTGRES_DB: helpdesk
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: helpdesk-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=helpdesk
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-development-only-secret}
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: helpdesk-frontend
    ports:
      - "${FRONTEND_PORT:-80}:3000"
    environment:
      - REACT_APP_API_URL=${API_URL:-http://localhost:3001}
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
