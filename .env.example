# Environment variables for the entire project
# Copy this file to .env and replace placeholder values with actual secrets
# NEVER commit the actual .env file to version control!

# Database configuration
DB_HOST=postgres
DB_PORT=5432
DB_NAME=helpdesk
DB_USER=postgres
# CRITICAL: Generate a strong database password (32+ characters)
# Example: openssl rand -base64 32
DB_PASSWORD=REPLACE_WITH_SECURE_PASSWORD

# JWT Secret (64+ characters recommended)
# Example: openssl rand -base64 64
JWT_SECRET=REPLACE_WITH_SECURE_JWT_SECRET
DB_PASSWORD=REPLACE_WITH_SECURE_PASSWORD_MINIMUM_20_CHARS

# JWT Secret - CRITICAL: Generate with cryptographically secure random string
# Generate with: openssl rand -hex 64
# Must be at least 64 characters for production security
JWT_SECRET=REPLACE_WITH_64_CHAR_RANDOM_HEX_STRING_GENERATED_BY_OPENSSL

# Session Configuration (in milliseconds)
SESSION_TIMEOUT=3600000
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_TIME=900000

# Admin Email for initial setup - Use your real admin email
ADMIN_EMAIL=admin@yourcompany.com

# Email Configuration - PRODUCTION READY EXAMPLES
# For production, use a proper SMTP service like SendGrid, Mailgun, AWS SES, etc.
# Never use personal Gmail accounts for production services

# Example for SendGrid (RECOMMENDED FOR PRODUCTION)
# SMTP_HOST=smtp.sendgrid.net
# SMTP_PORT=587
# SMTP_USER=apikey
# SMTP_PASS=REPLACE_WITH_YOUR_SENDGRID_API_KEY
# FROM_EMAIL=noreply@yourdomain.com

# Example for Mailgun
# SMTP_HOST=smtp.mailgun.org
# SMTP_PORT=587
# SMTP_USER=REPLACE_WITH_MAILGUN_USER
# SMTP_PASS=REPLACE_WITH_MAILGUN_PASSWORD
# FROM_EMAIL=noreply@yourdomain.com

# Example for AWS SES
# SMTP_HOST=email-smtp.us-east-1.amazonaws.com
# SMTP_PORT=587
# SMTP_USER=REPLACE_WITH_AWS_ACCESS_KEY
# SMTP_PASS=REPLACE_WITH_AWS_SECRET_KEY
# FROM_EMAIL=noreply@yourdomain.com

# For development/testing only - Ethereal Email
SMTP_HOST=smtp.ethereal.email
SMTP_PORT=587
SMTP_USER=REPLACE_WITH_ETHEREAL_USER
SMTP_PASS=REPLACE_WITH_ETHEREAL_PASS
FROM_EMAIL=noreply@helpdesk.local

# Test email address for email service testing
TEST_EMAIL=test@example.com

# Production Database Settings
# For production deployment with cloud databases (Google Cloud SQL, AWS RDS, etc.)
# DB_HOST=your_production_database_host
# DB_SSL=true
# DB_SSL_REJECT_UNAUTHORIZED=true

# Application Settings
NODE_ENV=development
PORT=3001

# Security Settings
# Rate limiting
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX_REQUESTS=100

# Session security
SECURE_COOKIES=false
SAME_SITE_COOKIES=lax

# For production, set these to:
# SECURE_COOKIES=true
# SAME_SITE_COOKIES=strict
# NODE_ENV=production
# DB_USER=your_production_db_user
# DB_PASSWORD=your_production_db_password
