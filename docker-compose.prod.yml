version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: helpdesk-frontend-prod
    ports:
      - "80:80"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${API_URL:-http://34.173.186.108:3001/api}
      - REACT_APP_WS_URL=${FRONTEND_URL:-http://34.173.186.108}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - helpdesk-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: helpdesk-backend-prod
    ports:
      - "3001:3001"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=helpdesk-postgres-prod
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-helpdesk_db}
      - DB_USER=${DB_USER:-helpdesk_user}
      - DB_PASSWORD=${DB_PASSWORD:-HelpDesk2025SecurePassword!}
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-must-be-at-least-256-bits-long-for-production-security}
      - PORT=3001
      - CORS_ORIGIN=${CORS_ORIGIN:-http://34.173.186.108}
      - API_URL=${API_URL:-http://34.173.186.108:3001/api}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
    networks:
      - helpdesk-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      helpdesk-postgres-prod:
        condition: service_healthy

  helpdesk-postgres-prod:
    image: postgres:16-alpine
    container_name: helpdesk-postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-helpdesk_db}
      - POSTGRES_USER=${DB_USER:-helpdesk_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-HelpDesk2025SecurePassword!}
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - helpdesk-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-helpdesk_user} -d ${DB_NAME:-helpdesk_db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  helpdesk-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
